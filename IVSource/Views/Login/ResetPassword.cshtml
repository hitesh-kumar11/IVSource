@model IVSource.Models.Login

@{
    ViewData["Title"] = "Reset Password";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}


<div class="col-lg-8 login-form">
    <div>
        <div class="text-danger field-validation-error">@TempData["Message"]</div><br />
        @if (!string.IsNullOrWhiteSpace(Model.EMail))
        {
            <form asp-action="ResetPasswordP">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input asp-for="UserName" class="form-control" type="hidden" />
                    <input asp-for="EMail" class="form-control" type="hidden" />
                <div class="form-group">
                    <input asp-for="Password" class="form-control" type="password" placeholder="Password" required="required" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input asp-for="ConfirmPassword" class="form-control" type="password" placeholder="Confirm Password" required="required" data-msg="Please Confirm Password" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </form>
        }
        else if (TempData["Message"] != null && TempData["Message"].ToString().Contains("Please login with your new password."))
        {
            <div class="form-group subsBtn">
                <a asp-controller="Login" asp-action="Members" class="btn btn-default">Login</a><br>
            </div>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

